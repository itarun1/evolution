{"ast":null,"code":"// import {createStore, applyMiddleware} from 'redux';\n// import logger from 'redux-logger'\n// import rootReducer from './root-reducer'\n// import reduxThunk from 'redux-thunk'\n// const middlewares = [reduxThunk]\n// if(process.env.NODE_ENV==='development'){\n//     middlewares.push(logger)\n// }\n// const store = createStore(rootReducer,applyMiddleware(...middlewares))\n// export default store\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport createLogger from 'redux-logger';\nimport rootReducer from '../reducers/reducers';\nimport Immutable from 'immutable';\nconst loggerMiddleware = createLogger(); //const initialState=0\n\nfunction store() {\n  return createStore(rootReducer, {\n    postsBySubreddit: {},\n    selectedSubreddit: 'reactjs'\n  }, applyMiddleware(thunkMiddleware, loggerMiddleware));\n}\n\nexport default store;","map":{"version":3,"sources":["/home/sumit/Desktop/sumit_fw14_106/unit-5/sprint-1/evaluation/src/redux/strore.js"],"names":["createStore","applyMiddleware","thunkMiddleware","createLogger","rootReducer","Immutable","loggerMiddleware","store","postsBySubreddit","selectedSubreddit"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,MAAMC,gBAAgB,GAAGH,YAAY,EAArC,C,CACA;;AACA,SAASI,KAAT,GAAiB;AACb,SAAOP,WAAW,CAClBI,WADkB,EAEjB;AAACI,IAAAA,gBAAgB,EAAC,EAAlB;AAAqBC,IAAAA,iBAAiB,EAAC;AAAvC,GAFiB,EAGjBR,eAAe,CACfC,eADe,EAEhBI,gBAFgB,CAHE,CAAlB;AAQH;;AACC,eAAeC,KAAf","sourcesContent":["// import {createStore, applyMiddleware} from 'redux';\n// import logger from 'redux-logger'\n// import rootReducer from './root-reducer'\n// import reduxThunk from 'redux-thunk'\n\n// const middlewares = [reduxThunk]\n\n// if(process.env.NODE_ENV==='development'){\n//     middlewares.push(logger)\n// }\n\n// const store = createStore(rootReducer,applyMiddleware(...middlewares))\n\n// export default store\n\nimport { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport createLogger from 'redux-logger'\nimport rootReducer from '../reducers/reducers'\nimport Immutable from 'immutable'\nconst loggerMiddleware = createLogger()\n//const initialState=0\nfunction store() {\n    return createStore(\n    rootReducer,\n     {postsBySubreddit:{},selectedSubreddit:'reactjs'},\n     applyMiddleware(\n     thunkMiddleware,\n    loggerMiddleware\n  )\n )\n}\n  export default store"]},"metadata":{},"sourceType":"module"}