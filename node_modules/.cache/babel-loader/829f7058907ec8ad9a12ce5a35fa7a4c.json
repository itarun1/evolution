{"ast":null,"code":"var _jsxFileName = \"/home/sumit/Desktop/sumit_fw14_106/unit-5/sprint-1/evaluation/src/components/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport { useDispatch } from 'react-redux';\nimport { addUser } from '../redux/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = () => {\n  _s();\n\n  const [state, setState] = useState({\n    country: \"\",\n    city: '',\n    population: ''\n  });\n  const [error, setError] = useState('');\n  let dispatch = useDispatch();\n  const {\n    country,\n    city,\n    population\n  } = state;\n\n  const handleInput = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    setState({ ...state,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!country || !city || !population) {\n      setError('all fields are required');\n    } else {\n      dispatch(addUser(state));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Add city\", /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      sx: {\n        '& > :not(style)': {\n          m: 1,\n          width: '25ch'\n        }\n      },\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        label: \"country\",\n        variant: \"standard\",\n        type: \"text\",\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        label: \"city\",\n        variant: \"standard\",\n        type: \"text\",\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        label: \"population\",\n        variant: \"standard\",\n        type: \"number\",\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onSubmit: handleSubmit,\n        type: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"86DZYeg2VKulbn2gA74VO8cKW44=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/home/sumit/Desktop/sumit_fw14_106/unit-5/sprint-1/evaluation/src/components/AddUser.js"],"names":["React","useState","Box","TextField","Button","ButtonGroup","useDispatch","addUser","AddUser","state","setState","country","city","population","error","setError","dispatch","handleInput","e","name","value","target","handleSubmit","preventDefault","m","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAIA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC;AAC/BU,IAAAA,OAAO,EAAC,EADuB;AAE/BC,IAAAA,IAAI,EAAC,EAF0B;AAG/BC,IAAAA,UAAU,EAAC;AAHoB,GAAD,CAAlC;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAIe,QAAQ,GAAEV,WAAW,EAAzB;AACA,QAAM;AAACK,IAAAA,OAAD;AAASC,IAAAA,IAAT;AAAcC,IAAAA;AAAd,MAA2BJ,KAAjC;;AACA,QAAMQ,WAAW,GAAGC,CAAD,IAAK;AACpB,QAAI;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAeF,CAAC,CAACG,MAArB;AACAX,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAU,OAACU,IAAD,GAAOC;AAAjB,KAAD,CAAR;AACH,GAHD;;AAKA,QAAME,YAAY,GAAEJ,CAAD,IAAK;AACpBA,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAG,CAACZ,OAAD,IAAY,CAACC,IAAb,IAAqB,CAACC,UAAzB,EAAoC;AAChCE,MAAAA,QAAQ,CAAC,yBAAD,CAAR;AACH,KAFD,MAGI;AACCC,MAAAA,QAAQ,CAACT,OAAO,CAACE,KAAD,CAAR,CAAR;AAEJ;AACJ,GATD;;AAUF,sBACE;AAAA,wCAEI,QAAC,GAAD;AACF,MAAA,SAAS,EAAC,MADR;AAEF,MAAA,EAAE,EAAE;AACF,2BAAmB;AAAEe,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,KAAK,EAAE;AAAf;AADjB,OAFF;AAKF,MAAA,UAAU,MALR;AAMF,MAAA,YAAY,EAAC,KANX;AAAA,8BASF,QAAC,SAAD;AAAW,QAAA,EAAE,EAAC,gBAAd;AAA+B,QAAA,KAAK,EAAC,SAArC;AAA+C,QAAA,OAAO,EAAC,UAAvD;AAAmE,QAAA,IAAI,EAAC,MAAxE;AAA+E,QAAA,QAAQ,EAAER;AAAzF;AAAA;AAAA;AAAA;AAAA,cATE,eAUF,QAAC,SAAD;AAAW,QAAA,EAAE,EAAC,gBAAd;AAA+B,QAAA,KAAK,EAAC,MAArC;AAA4C,QAAA,OAAO,EAAC,UAApD;AAAgE,QAAA,IAAI,EAAC,MAArE;AAA4E,QAAA,QAAQ,EAAEA;AAAtF;AAAA;AAAA;AAAA;AAAA,cAVE,eAWF,QAAC,SAAD;AAAW,QAAA,EAAE,EAAC,gBAAd;AAA+B,QAAA,KAAK,EAAC,YAArC;AAAkD,QAAA,OAAO,EAAC,UAA1D;AAAsE,QAAA,IAAI,EAAC,QAA3E;AAAoF,QAAA,QAAQ,EAAEA;AAA9F;AAAA;AAAA;AAAA;AAAA,cAXE,eAYF,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,QAAQ,EAAEK,YAAtC;AAAoD,QAAA,IAAI,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZE;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA3CD;;GAAMd,O;UAOYF,W;;;KAPZE,O;AA6CN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport { useDispatch } from 'react-redux';\nimport { addUser } from '../redux/action';\n\n\n\nconst AddUser = () => {\n    const [state, setState] = useState({\n        country:\"\",\n        city:'',\n        population:'',\n    })\n    const [error, setError] = useState('')\n    let dispatch= useDispatch()\n    const {country,city,population}= state;\n    const handleInput= (e)=>{\n        let {name, value}= e.target\n        setState({...state,[name]:value})\n    }\n\n    const handleSubmit=(e)=>{\n        e.preventDefault()\n        if(!country || !city || !population){\n            setError('all fields are required')\n        }\n        else{\n             dispatch(addUser(state))\n\n        }\n    }\n  return (\n    <div>\n        Add city\n        <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n     \n      <TextField id=\"standard-basic\" label=\"country\" variant=\"standard\"  type=\"text\" onChange={handleInput}/>\n      <TextField id=\"standard-basic\" label=\"city\" variant=\"standard\"  type=\"text\" onChange={handleInput}/>\n      <TextField id=\"standard-basic\" label=\"population\" variant=\"standard\"  type=\"number\" onChange={handleInput}/>\n      <Button variant='contained' onSubmit={handleSubmit} type=\"submit\">submit</Button>\n    </Box>\n    </div>\n  )\n}\n\nexport default AddUser"]},"metadata":{},"sourceType":"module"}