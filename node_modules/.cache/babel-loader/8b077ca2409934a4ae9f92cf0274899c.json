{"ast":null,"code":"import * as types from './actionType';\nimport axios from 'axios';\n\nconst getUsers = users => ({\n  type: types.GET_USERS,\n  payload: users\n});\n\nconst useDeleted = () => ({\n  type: types.DELETE_USER\n});\n\nconst userAdded = () => ({\n  type: types.ADD_USER\n});\n\nconst userUpdate = () => ({\n  type: types.UPDTAE\n});\n\nconst userUpdated = user => ({\n  type: types.GETONECITY,\n  payload: user\n});\n\nexport const loadUsers = () => {\n  return function (dispatch) {\n    axios.get(`${process.env.REACT_APP_API}`).then(resp => {\n      dispatch(getUsers(resp.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const deleteUser = id => {\n  return function (dispatch) {\n    var _s = $RefreshSig$();\n\n    _s(axios.delete(`${process.env.REACT_APP_API}/${id}`).then(_s(resp => {\n      _s();\n\n      dispatch(useDeleted());\n      dispatch(loadUsers());\n    }, \"w/eZ70fwhOzdXRllgaFtNdCnJNM=\", false, function () {\n      return [useDeleted];\n    })), \"w/eZ70fwhOzdXRllgaFtNdCnJNM=\", false, function () {\n      return [useDeleted];\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const addUser = user => {\n  return function (dispatch) {\n    axios.post(`${process.env.REACT_APP_API}`, user).then(resp => {\n      dispatch(userAdded());\n      dispatch(loadUsers());\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const updatecity = id => {\n  return function (dispatch) {\n    axios.get(`${process.env.REACT_APP_API}/${id}`).then(resp => {\n      dispatch(userUpdated(resp.data)); // dispatch(loadUsers())\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const updatedcity = (user, id) => {\n  return function (dispatch) {\n    axios.put(`${process.env.REACT_APP_API}/${id}`, user).then(resp => {\n      dispatch(userUpdate()); // dispatch(loadUsers())\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["/home/sumit/Desktop/sumit_fw14_106/unit-5/sprint-1/evaluation/src/redux/action.js"],"names":["types","axios","getUsers","users","type","GET_USERS","payload","useDeleted","DELETE_USER","userAdded","ADD_USER","userUpdate","UPDTAE","userUpdated","user","GETONECITY","loadUsers","dispatch","get","process","env","REACT_APP_API","then","resp","data","catch","err","console","log","deleteUser","id","delete","addUser","post","updatecity","updatedcity","put"],"mappings":"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","sourcesContent":["import * as types from './actionType'\nimport axios from 'axios'\n\nconst getUsers=(users)=>({\n    type:types.GET_USERS,\n    payload:users,\n})\n\nconst useDeleted = ()=>({\n    type:types.DELETE_USER,\n})\nconst userAdded = ()=>({\n    type:types.ADD_USER,\n})\nconst userUpdate = ()=>({\n    type:types.UPDTAE,\n})\nconst userUpdated = (user)=>({\n    type:types.GETONECITY,\n    payload:user,\n})\n\nexport const loadUsers=()=>{\n    return function(dispatch){\n        axios.get(`${process.env.REACT_APP_API}`).then((resp)=>{\n            dispatch(getUsers(resp.data))\n        }).catch((err)=>{console.log(err)})\n    }\n}\nexport const deleteUser=(id)=>{\n    return function(dispatch){\n        axios.delete(`${process.env.REACT_APP_API}/${id}`).then((resp)=>{\n            dispatch(useDeleted());\n            dispatch(loadUsers())\n        }).catch((err)=>{console.log(err)})\n    }\n}\n\nexport const addUser=(user)=>{\n    return function(dispatch){\n        axios.post(`${process.env.REACT_APP_API}`,user).then((resp)=>{\n            dispatch(userAdded());\n            dispatch(loadUsers())\n        }).catch((err)=>{console.log(err)})\n    }\n}\n\nexport const updatecity=(id)=>{\n    return function(dispatch){\n        axios.get(`${process.env.REACT_APP_API}/${id}`).then((resp)=>{\n            dispatch(userUpdated(resp.data))\n           // dispatch(loadUsers())\n        }).catch((err)=>{console.log(err)})\n    }\n}\nexport const updatedcity=(user,id)=>{\n    return function(dispatch){\n        axios.put(`${process.env.REACT_APP_API}/${id}`,user).then((resp)=>{\n            dispatch(userUpdate())\n           // dispatch(loadUsers())\n        }).catch((err)=>{console.log(err)})\n    }\n}"]},"metadata":{},"sourceType":"module"}