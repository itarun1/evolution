{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport reduxThunk from 'redux-thunk';\nimport createLogger from 'redux-logger';\nconst middlewares = createLogger(); // if(process.env.NODE_ENV==='development'){\n//     middlewares\n// }\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nexport default store; // import { createStore, applyMiddleware } from 'redux'\n// import thunkMiddleware from 'redux-thunk'\n// \n// import rootReducer from '../reducers/reducers'\n// //import Immutable from 'immutable'\n// const loggerMiddleware = createLogger()\n// //const initialState=0\n// function store() {\n//     return createStore(\n//     rootReducer,\n//      {postsBySubreddit:{},selectedSubreddit:'reactjs'},\n//      applyMiddleware(\n//      thunkMiddleware,\n//     loggerMiddleware\n//   )\n//  )\n// }\n//   export default store","map":{"version":3,"sources":["/home/sumit/Desktop/sumit_fw14_106/unit-5/sprint-1/evaluation/src/redux/strore.js"],"names":["createStore","applyMiddleware","logger","rootReducer","reduxThunk","createLogger","middlewares","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AAGA,MAAMC,WAAW,GAAGD,YAAY,EAAhC,C,CAEA;AACA;AACA;;AAEA,MAAME,KAAK,GAAGP,WAAW,CAACG,WAAD,EAAaF,eAAe,CAAC,GAAGK,WAAJ,CAA5B,CAAzB;AAEA,eAAeC,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\nimport logger from 'redux-logger'\nimport rootReducer from './root-reducer'\nimport reduxThunk from 'redux-thunk'\nimport createLogger from 'redux-logger'\n\n\nconst middlewares = createLogger()\n\n// if(process.env.NODE_ENV==='development'){\n//     middlewares\n// }\n\nconst store = createStore(rootReducer,applyMiddleware(...middlewares))\n\nexport default store\n\n// import { createStore, applyMiddleware } from 'redux'\n// import thunkMiddleware from 'redux-thunk'\n// \n// import rootReducer from '../reducers/reducers'\n// //import Immutable from 'immutable'\n// const loggerMiddleware = createLogger()\n// //const initialState=0\n// function store() {\n//     return createStore(\n//     rootReducer,\n//      {postsBySubreddit:{},selectedSubreddit:'reactjs'},\n//      applyMiddleware(\n//      thunkMiddleware,\n//     loggerMiddleware\n//   )\n//  )\n// }\n//   export default store"]},"metadata":{},"sourceType":"module"}